# Generated by Django 5.2.2 on 2025-06-06 17:24

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('clients', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Route',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('date', models.DateField()),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('planned', 'Planned'), ('active', 'Active'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='draft', max_length=20)),
                ('total_distance', models.DecimalField(blank=True, decimal_places=2, help_text='Total distance in km', max_digits=10, null=True)),
                ('estimated_duration', models.IntegerField(blank=True, help_text='Estimated duration in minutes', null=True)),
                ('optimized_sequence', models.JSONField(default=list, help_text='Optimized delivery sequence from Google Maps')),
                ('waypoints', models.JSONField(default=list, help_text='List of waypoints with coordinates')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_routes', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-date', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='RouteOptimization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('request_data', models.JSONField(help_text='Request sent to Google Maps API')),
                ('response_data', models.JSONField(help_text='Response from Google Maps API')),
                ('optimization_type', models.CharField(default='distance', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('success', models.BooleanField(default=True)),
                ('error_message', models.TextField(blank=True)),
                ('route', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='optimizations', to='route.route')),
            ],
        ),
        migrations.CreateModel(
            name='RouteStop',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sequence_number', models.IntegerField()),
                ('estimated_arrival_time', models.DateTimeField(blank=True, null=True)),
                ('actual_arrival_time', models.DateTimeField(blank=True, null=True)),
                ('distance_from_previous', models.DecimalField(blank=True, decimal_places=2, help_text='Distance from previous stop in km', max_digits=10, null=True)),
                ('duration_from_previous', models.IntegerField(blank=True, help_text='Duration from previous stop in minutes', null=True)),
                ('delivery_notes', models.TextField(blank=True)),
                ('is_completed', models.BooleanField(default=False)),
                ('farmer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clients.farmer')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clients.order')),
                ('route', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stops', to='route.route')),
            ],
            options={
                'ordering': ['route', 'sequence_number'],
                'unique_together': {('route', 'sequence_number')},
            },
        ),
    ]
