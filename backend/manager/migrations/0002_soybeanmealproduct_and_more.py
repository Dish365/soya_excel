# Generated by Django 5.2.2 on 2025-06-23 21:56

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('clients', '0002_remove_feedstorage_low_stock_threshold_and_more'),
        ('manager', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='SoybeanMealProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_name', models.CharField(max_length=200)),
                ('product_code', models.CharField(max_length=50, unique=True)),
                ('product_type', models.CharField(choices=[('soybean_meal_44', 'Soybean Meal 44% Protein'), ('soybean_meal_48', 'Soybean Meal 48% Protein'), ('soybean_hulls', 'Soybean Hulls'), ('soybean_oil', 'Soybean Oil'), ('specialty_blend', 'Specialty Blend')], max_length=20)),
                ('protein_percentage', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('crude_fiber_percentage', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('moisture_percentage', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('primary_origin', models.CharField(choices=[('canada', 'Canada'), ('usa', 'United States'), ('brazil', 'Brazil'), ('argentina', 'Argentina'), ('other', 'Other')], default='canada', max_length=20)),
                ('sustainability_certified', models.BooleanField(default=False)),
                ('base_price_per_tonne', models.DecimalField(decimal_places=2, help_text='Base price per tonne', max_digits=10)),
                ('price_last_updated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['product_type', 'product_name'],
            },
        ),
        migrations.RemoveField(
            model_name='distributionplan',
            name='approved_by',
        ),
        migrations.RemoveField(
            model_name='distributionplan',
            name='created_by',
        ),
        migrations.AlterModelOptions(
            name='supplyinventory',
            options={'ordering': ['product__product_name'], 'verbose_name_plural': 'Supply Inventories'},
        ),
        migrations.AddField(
            model_name='manager',
            name='can_approve_plans',
            field=models.BooleanField(default=False, help_text='Can approve distribution plans'),
        ),
        migrations.AddField(
            model_name='manager',
            name='can_manage_contracts',
            field=models.BooleanField(default=False, help_text='Can manage long-term contracts'),
        ),
        migrations.AddField(
            model_name='manager',
            name='managed_provinces',
            field=models.JSONField(default=list, help_text='List of provinces this manager oversees'),
        ),
        migrations.AddField(
            model_name='supplyinventory',
            name='alix_inventory_id',
            field=models.CharField(blank=True, help_text='ALIX inventory reference', max_length=100),
        ),
        migrations.AddField(
            model_name='supplyinventory',
            name='batch_expiry_date',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='supplyinventory',
            name='batch_received_date',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='supplyinventory',
            name='current_batch_number',
            field=models.CharField(blank=True, max_length=100),
        ),
        migrations.AddField(
            model_name='supplyinventory',
            name='last_quality_check',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='supplyinventory',
            name='quality_grade',
            field=models.CharField(blank=True, max_length=10),
        ),
        migrations.AddField(
            model_name='supplyinventory',
            name='silo_number',
            field=models.CharField(blank=True, max_length=20),
        ),
        migrations.AddField(
            model_name='supplyinventory',
            name='storage_location',
            field=models.CharField(blank=True, help_text='Physical storage location', max_length=100),
        ),
        migrations.AddField(
            model_name='supplytransaction',
            name='alix_transaction_id',
            field=models.CharField(blank=True, help_text='ALIX transaction reference', max_length=100),
        ),
        migrations.AddField(
            model_name='supplytransaction',
            name='bill_of_lading',
            field=models.CharField(blank=True, max_length=100),
        ),
        migrations.AddField(
            model_name='supplytransaction',
            name='container_number',
            field=models.CharField(blank=True, help_text='Container number if applicable', max_length=50),
        ),
        migrations.AddField(
            model_name='supplytransaction',
            name='order_reference',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='clients.order'),
        ),
        migrations.AddField(
            model_name='supplytransaction',
            name='origin_country',
            field=models.CharField(blank=True, max_length=50),
        ),
        migrations.AddField(
            model_name='supplytransaction',
            name='quality_approved',
            field=models.BooleanField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='supplytransaction',
            name='quality_certificate',
            field=models.TextField(blank=True),
        ),
        migrations.AddField(
            model_name='supplytransaction',
            name='supplier_name',
            field=models.CharField(blank=True, max_length=200),
        ),
        migrations.AlterField(
            model_name='supplyinventory',
            name='current_stock',
            field=models.DecimalField(decimal_places=2, help_text='Current stock in tonnes', max_digits=12),
        ),
        migrations.AlterField(
            model_name='supplyinventory',
            name='maximum_stock',
            field=models.DecimalField(decimal_places=2, help_text='Maximum stock level in tonnes', max_digits=12),
        ),
        migrations.AlterField(
            model_name='supplyinventory',
            name='minimum_stock',
            field=models.DecimalField(decimal_places=2, help_text='Minimum stock level in tonnes', max_digits=12),
        ),
        migrations.AlterField(
            model_name='supplytransaction',
            name='quantity',
            field=models.DecimalField(decimal_places=2, help_text='Quantity in tonnes (positive for inflow, negative for outflow)', max_digits=12),
        ),
        migrations.AlterField(
            model_name='supplytransaction',
            name='transaction_type',
            field=models.CharField(choices=[('container_unload', 'Container Unloading'), ('dispatch', 'Dispatch to Customer'), ('transfer', 'Inter-Silo Transfer'), ('adjustment', 'Inventory Adjustment'), ('return', 'Customer Return'), ('quality_hold', 'Quality Hold'), ('quality_release', 'Quality Release')], max_length=20),
        ),
        migrations.CreateModel(
            name='KPIMetrics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('metric_type', models.CharField(choices=[('km_per_tonne_trituro_44', 'KM/TM for All Trituro 44'), ('km_per_tonne_dairy_trituro', 'KM/TM for All Dairy Trituro'), ('km_per_tonne_oil', 'KM/TM for All Oil'), ('forecast_accuracy', 'Forecast Accuracy'), ('on_time_delivery', 'On-Time Delivery Rate'), ('fleet_utilization', 'Fleet Utilization'), ('co2_emissions', 'CO2 Emissions'), ('customer_satisfaction', 'Customer Satisfaction')], max_length=30)),
                ('period_type', models.CharField(choices=[('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly'), ('quarterly', 'Quarterly'), ('annual', 'Annual')], max_length=10)),
                ('period_start', models.DateField()),
                ('period_end', models.DateField()),
                ('metric_value', models.DecimalField(decimal_places=2, max_digits=12)),
                ('target_value', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('previous_period_value', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('total_distance_km', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('total_tonnes_delivered', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('number_of_deliveries', models.IntegerField(blank=True, null=True)),
                ('trend_direction', models.CharField(blank=True, choices=[('improving', 'Improving'), ('stable', 'Stable'), ('declining', 'Declining')], max_length=10, null=True)),
                ('calculated_at', models.DateTimeField(auto_now_add=True)),
                ('calculated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-period_end', 'metric_type'],
                'unique_together': {('metric_type', 'period_type', 'period_start', 'period_end')},
            },
        ),
        migrations.CreateModel(
            name='MonthlyDistributionPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('plan_name', models.CharField(max_length=200)),
                ('month', models.DateField(help_text='First day of the month')),
                ('total_monthly_forecast', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('contract_deliveries_forecast', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('seasonal_adjustments', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('dairy_trituro_forecast', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('trituro_44_forecast', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('oil_forecast', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('production_capacity_needed', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('fleet_utilization_target', models.DecimalField(decimal_places=2, default=85.0, max_digits=5)),
                ('actual_monthly_deliveries', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('forecast_accuracy_percentage', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('approved', 'Approved'), ('active', 'Active'), ('completed', 'Completed')], default='draft', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_monthly_plans', to='manager.manager')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='manager.manager')),
            ],
            options={
                'ordering': ['-month'],
            },
        ),
        migrations.AddField(
            model_name='supplyinventory',
            name='product',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='inventory_records', to='manager.soybeanmealproduct'),
        ),
        migrations.AlterUniqueTogether(
            name='supplyinventory',
            unique_together={('product', 'silo_number')},
        ),
        migrations.CreateModel(
            name='WeeklyDistributionPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('plan_name', models.CharField(max_length=200)),
                ('planning_week', models.CharField(choices=[('current', 'Current Week'), ('next', 'Next Week'), ('week_2', 'Week +2'), ('week_3', 'Week +3')], help_text='Which week this plan covers', max_length=10)),
                ('week_start_date', models.DateField(help_text='Monday of the planning week')),
                ('week_end_date', models.DateField(help_text='Sunday of the planning week')),
                ('total_quantity_planned', models.DecimalField(decimal_places=2, default=0, help_text='Total tonnes planned', max_digits=12)),
                ('total_contract_deliveries', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('total_on_demand_deliveries', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('total_emergency_deliveries', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('planned_routes', models.IntegerField(default=0, help_text='Number of planned routes')),
                ('estimated_total_km', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('estimated_fuel_cost', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('estimated_co2_emissions', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('forecasted_demand', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('actual_demand', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('forecast_accuracy_percentage', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('under_review', 'Under Review'), ('approved', 'Approved'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='draft', max_length=20)),
                ('approved_date', models.DateTimeField(blank=True, null=True)),
                ('planned_on_tuesday', models.BooleanField(default=False, help_text='Planned during Tuesday-Friday cycle')),
                ('finalized_by_friday', models.BooleanField(default=False, help_text='Finalized by end of Friday')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_plans', to='manager.manager')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_plans', to='manager.manager')),
            ],
            options={
                'ordering': ['-week_start_date'],
                'unique_together': {('planning_week', 'week_start_date')},
            },
        ),
        migrations.DeleteModel(
            name='Analytics',
        ),
        migrations.DeleteModel(
            name='DistributionPlan',
        ),
        migrations.RemoveField(
            model_name='supplyinventory',
            name='product_code',
        ),
        migrations.RemoveField(
            model_name='supplyinventory',
            name='product_name',
        ),
        migrations.RemoveField(
            model_name='supplyinventory',
            name='unit_price',
        ),
    ]
